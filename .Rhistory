as.data.frame() %>%
clean_names() %>%
arrange(desc(x2020_data)) %>%
slice_max(x2020_data, n=5)
min_public_transportation <- public_transportation %>%
as.data.frame() %>%
clean_names() %>%
slice_min(x2020_data, n=5)
View(max_public_transportation)
View(min_public_transportation)
# 5 Baltimore neighborhoods that use public transportation the most to get to work
max_public_transportation <- public_transportation %>%
as.data.frame() %>%
clean_names() %>%
arrange(desc(x2020_data)) %>%
slice_max(x2020_data, n=5)
# 5 Baltimore neighborhoods that use public transportation the least to get to work
min_public_transportation <- public_transportation %>%
as.data.frame() %>%
clean_names() %>%
slice_min(x2020_data, n=5)
# Output dataframes
max_public_transportation
min_public_transportation
View(median_income)
median_income <- median_income %>%
as.data.frame() %>%
clean_names()
View(median_income)
View(median_income)
View(max_public_transportation)
max_transit_income <- max_public_transportation %>%
clean_names() %>%
inner_join(median_income, by="community")
View(max_transit_income)
max_transit_income <- max_public_transportation %>%
clean_names() %>%
inner_join(median_income, by="community")
min_transit_income <- min_public_transportation %>%
clean_names() %>%
inner_join(median_income, by="community")
View(min_public_transportation)
View(min_transit_income)
# inner join neighborhoods that use public transportation the most with income data
max_transit_income <- max_public_transportation %>%
clean_names() %>%
inner_join(median_income, by="community")
# inner join neighborhoods that use public transportation the least with income data
min_transit_income <- min_public_transportation %>%
clean_names() %>%
inner_join(median_income, by="community")
# output dataframes
max_transit_income
min_transit_income
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, pop_black, pop_white, pop_hisp, by="community")
View(pop_black)
pop_asian %>%
clean_names()
pop_white %>%
clean_names()
pop_black %>%
clean_names()
pop_hisp %>%
clean_names()
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, pop_black, pop_white, pop_hisp, by="community")
View(pop_white)
View(pop_hisp)
View(pop_black)
View(pop_asian)
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community")
pop_asian <- pop_asian %>%
clean_names()
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community")
pop_asian <- pop_asian %>%
clean_names()
pop_white <- pop_white %>%
clean_names()
pop_black <- pop_black %>%
clean_names()
pop_hisp <- pop_hisp %>%
clean_names()
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian,pop_black, pop_white, pop_hisp, by="community")
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, pop_black, by="community")
View(max_transit_race)
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
```
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community")
View(max_transit_race)
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
View(max_transit_race)
min_transit_race <- min_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(lubridate)
library(readxl)
library(ggthemes)
library(sf)
library(leaflet)
library(plyr)
public_transportation <- read_excel("public_transportation/public_transportation.xlsx")
drive_to_work <- read_excel("public_transportation/drive_to_work.xlsx")
no_car <- read_excel("public_transportation/no_car_access.xlsx")
median_income <- read_excel("public_transportation/median_income.xlsx")
pop_white <- read_excel("public_transportation/population_white.xlsx")
pop_black <- read_excel("population_black/population_black.xlsx")
pop_hisp <- read_excel("population_black/population_hispanic.xlsx")
pop_asian <- read_excel("population_black/population_asian.xlsx")
# 5 Baltimore neighborhoods that use public transportation the most to get to work
max_public_transportation <- public_transportation %>%
as.data.frame() %>%
clean_names() %>%
arrange(desc(x2020_data)) %>%
slice_max(x2020_data, n=5)
# 5 Baltimore neighborhoods that use public transportation the least to get to work
min_public_transportation <- public_transportation %>%
as.data.frame() %>%
clean_names() %>%
slice_min(x2020_data, n=5)
# Output dataframes
max_public_transportation
min_public_transportation
# inner join neighborhoods that use public transportation the most with income data
median_income <- median_income %>%
clean_names()
max_transit_income <- max_public_transportation %>%
clean_names() %>%
inner_join(median_income, by="community")
# inner join neighborhoods that use public transportation the least with income data
min_transit_income <- min_public_transportation %>%
clean_names() %>%
inner_join(median_income, by="community")
# output dataframes
max_transit_income
min_transit_income
# clean the names of all race dataframes so they join easily
pop_asian <- pop_asian %>%
clean_names()
pop_white <- pop_white %>%
clean_names()
pop_black <- pop_black %>%
clean_names()
pop_hisp <- pop_hisp %>%
clean_names()
# inner join race dataframes with the top public transport use and income dataframe
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
# inner join race dataframes with the minimum public transport use and income dataframe
min_transit_race <- min_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
# Output dataframes
max_transit_race
min_transit_race
no_car <- no_car %>%
clean_names()
low_public_high_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="community")
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community")
no_car <- no_car %>%
clean_names()
low_public_high_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="community")
low_public_high_drive
View(low_public_high_drive)
no_car <- no_car %>%
clean_names()
low_public_high_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="community") %>%
low_public_high_drive
no_car <- no_car %>%
clean_names()
low_public_high_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="community") %>%
low_public_high_drive
no_car <- no_car %>%
clean_names()
low_public_high_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="community")
low_public_high_drive
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community")
high_public_low_drive
View(max_public_transportation)
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community")
high_public_low_drive %>% rename(high_public_transport = x2020_data.x)
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community") %>%
rename(high_public_transport = x2020_data.x) %>%
rename(drives_to_work = x2020_data.y)
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community") %>%
rename
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community") %>%
rename
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community") %>%
rename("high_public_transport" = "x2020_data.x") %>%
rename("drives_to_work" = "x2020_data.y")
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community")
high_public_low_drive <- high_public_low_drive %>%
rename("high_public_transport" = "x2020_data.x",
"drives_to_work" = "x2020_data.y")
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community")
high_public_low_drive <- high_public_low_drive %>%
rename(high_public_transport = x2020_data.x,
drives_to_work = x2020_data.y)
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community") %>%
rename("high_public_transport" = "x2020_data.x",
"drives_to_work" = "x2020_data.y")
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community") %>%
names(high_public_low_drive)[names(high_public_low_drive) == "x2020_data.x"] <- "high_public_transport"
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community")
names(high_public_low_drive)[names(high_public_low_drive) == "x2020_data.x"] <- "high_public_transport"
#rename("high_public_transport" = "x2020_data.x","drives_to_work" = "x2020_data.y")
high_public_low_drive
drive_to_work <- drive_to_work %>%
clean_names()
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community")
names(high_public_low_drive)[names(high_public_low_drive) == "x2020_data.x"] <- "high_public_transport"
names(high_public_low_drive)[names(high_public_low_drive) == "x2020_data.y"] <- "drives_to_work"
high_public_low_drive
View(min_public_transportation)
no_car <- no_car %>%
clean_names()
low_public_high_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="community")
names(low_public_high_drive)[names(low_public_high_drive) == "x2020_data.x"] <- "low_public_transport"
names(low_public_high_drive)[names(low_public_high_drive) == "x2020_data.y"] <- "no_car"
low_public_high_drive
# inner join neighborhoods that use public transportation the most with income data
median_income <- median_income %>%
clean_names()
max_transit_income <- max_public_transportation %>%
clean_names() %>%
inner_join(median_income, by="community")
names(max_transit_income)[names(max_transit_income) == "x2020_data.x"] <- "high_public_transport"
names(max_transit_income)[names(max_transit_income) == "x2020_data.y"] <- "2020_income"
# inner join neighborhoods that use public transportation the least with income data
min_transit_income <- min_public_transportation %>%
clean_names() %>%
inner_join(median_income, by="community")
names(min_transit_income)[names(min_transit_income) == "x2020_data.x"] <- "low_public_transport"
names(min_transit_income)[names(min_transit_income) == "x2020_data.y"] <- "2020_income"
# output dataframes
max_transit_income
min_transit_income
# clean the names of all race dataframes so they join easily
pop_asian <- pop_asian %>%
clean_names()
pop_white <- pop_white %>%
clean_names()
pop_black <- pop_black %>%
clean_names()
pop_hisp <- pop_hisp %>%
clean_names()
# inner join race dataframes with the top public transport use and income dataframe
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "high_public_transport"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "asian_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "black_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "white_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "hisp_pop"
# inner join race dataframes with the minimum public transport use and income dataframe
min_transit_race <- min_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "low_public_transport"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "asian_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "black_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "white_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "hisp_pop"
# Output dataframes
max_transit_race
min_transit_race
pop_asian <- pop_asian %>%
clean_names()
pop_white <- pop_white %>%
clean_names()
pop_black <- pop_black %>%
clean_names()
pop_hisp <- pop_hisp %>%
clean_names()
# inner join race dataframes with the top public transport use and income dataframe
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
max_transit_race
# clean the names of all race dataframes so they join easily
pop_asian <- pop_asian %>%
clean_names()
pop_white <- pop_white %>%
clean_names()
pop_black <- pop_black %>%
clean_names()
pop_hisp <- pop_hisp %>%
clean_names()
# inner join race dataframes with the top public transport use and income dataframe
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "high_public_transport"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "asian_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "black_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x.x"] <- "white_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y.y"] <- "hisp_pop"
# inner join race dataframes with the minimum public transport use and income dataframe
min_transit_race <- min_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "low_public_transport"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "asian_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "black_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x.x"] <- "white_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y.y"] <- "hisp_pop"
# Output dataframes
max_transit_race
min_transit_race
min_transit_race <- min_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "low_public_transport"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "asian_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "black_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x.x"] <- "white_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y.y"] <- "hisp_pop"
min_transit_race
# clean the names of all race dataframes so they join easily
pop_asian <- pop_asian %>%
clean_names()
pop_white <- pop_white %>%
clean_names()
pop_black <- pop_black %>%
clean_names()
pop_hisp <- pop_hisp %>%
clean_names()
# inner join race dataframes with the top public transport use and income dataframe
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "high_public_transport"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "asian_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "black_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x.x"] <- "white_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y.y"] <- "hisp_pop"
# inner join race dataframes with the minimum public transport use and income dataframe
min_transit_race <- min_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "low_public_transport"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "asian_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "black_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x.x"] <- "white_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y.y"] <- "hisp_pop"
# Output dataframes
max_transit_race
min_transit_race
# clean the names of all race dataframes so they join easily
pop_asian <- pop_asian %>%
clean_names()
pop_white <- pop_white %>%
clean_names()
pop_black <- pop_black %>%
clean_names()
pop_hisp <- pop_hisp %>%
clean_names()
# inner join race dataframes with the top public transport use and income dataframe
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "high_public_transport"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x"] <- "asian_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y"] <- "black_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.x.x"] <- "white_pop"
names(max_transit_race)[names(max_transit_race) == "x2020_data.y.y"] <- "hisp_pop"
# inner join race dataframes with the minimum public transport use and income dataframe
min_transit_race <- min_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
names(min_transit_race)[names(min_transit_race) == "x2020_data.x"] <- "low_public_transport"
names(min_transit_race)[names(min_transit_race) == "x2020_data.x"] <- "asian_pop"
names(min_transit_race)[names(min_transit_race) == "x2020_data.y"] <- "black_pop"
names(min_transit_race)[names(min_transit_race) == "x2020_data.x.x"] <- "white_pop"
names(min_transit_race)[names(min_transit_race) == "x2020_data.y.y"] <- "hisp_pop"
# Output dataframes
max_transit_race
min_transit_race
