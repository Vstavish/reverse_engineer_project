clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2015", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
rate_2016 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2016", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
rate_2017 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
rate_2018 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2018", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
ate_2018 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2018", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
rate_2018 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2018", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(sf)
homicide_data <- read_csv("https://raw.githubusercontent.com/washingtonpost/data-homicides/master/homicide-data.csv")
baltimore_daily <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2015|2016|2017", reported_date))
# There are 1,095 days between 01/01/2015 and 12/31/2017. There were 1,002 reported homicides in Baltimore, MD during that same time period, proving that there was almost a killing each day for the past three years (imagining that we are writing this in 2018) in Baltimore, MD
bmore_2014_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
# City police made an arrest in 40.76 percent of homicides in 2014 in Baltimore
bmore_2017_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
# City police made an arrest in 27.35 percent of homicides in 2017 in Baltimore
bmore_2017_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
bmore_2014_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
# 27% of homicides resulted in arrests in 2017 while 41% of homicides resulted in arrests in 2014
chi_2014_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Chicago") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
chi_2017_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Chicago") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
# in 2014, Chicago's homicide arrest rate was 29.90 percent. In 2017, Chicago's homicide arrest rate was 8.56 percent.
# 29.90 - 8.56 = 21.34 percentage point drop in homicide arrest rates
bost_2017_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Boston") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + open_no_arrest)))
bost_2014_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Boston") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + open_no_arrest)))
# In 2014 Boston's homicide arrest rate was 52.72 percent. In 2017 Boston's homicide arrest rate was 40.74 percent.
# 52.72 - 40.74 = 11.98 percentage point drop in Boston's homicide arrest rates
louis_2014_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city == "St. Louis") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
louis_2017_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="St. Louis") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
# in 2014, St. Louis' homicide arrest rate was 40.63 percent. In 2017, St. Louis' homicide arrest rate was 31.68 percent.
# 40.63 - 31.68 = 8.95 percentage point drop in homicide arrest rates
before_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2010|2011|2012|2013|2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
#The arrest rate for the first half of the decade before 2015 hovered around 40.37 percent.
rate_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2015", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
rate_2016 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2016", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
rate_2017 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
rate_2018 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2018", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
View(homicide_data)
balt_2015_2018 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2015|2016|2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
View(balt_2015_2018)
rate_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2015", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
rate_2016 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2016", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
rate_2017 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
View(rate_2017)
View(rate_2016)
View(rate_2015)
balt_diff_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014|2015", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrests_2014 = (reported_date = "2014")) %>%
mutate(arrests_2015 = (reported_date = "2015")) %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
View(balt_diff_2015)
balt_diff_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
mutate(arrests_2014 = filter(grepl("2014|2015", reported_date))) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
View(balt_diff_2015)
balt_diff_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014|2015", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
balt_diff_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014|2015", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
balt_diff_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014|2015", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
View(balt_diff_2015)
balt_diff_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014", reported_date)) %>%
filter(grepl("2015", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
num_cases <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
count(reporter_date)
num_cases <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
count(reported_date)
View(num_cases)
num_cases <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2010|2011|2012|2013|2014|2015|2016|2017", reported_date)) %>%
count(reported_date)
View(num_cases)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(lubridate)
library(readxl)
library(ggthemes)
library(sf)
library(leaflet)
public_transportation <- read_excel("public_transportation/public_transportation.xlsx")
drive_to_work <- read_excel("public_transportation/drive_to_work.xlsx")
no_car <- read_excel("public_transportation/no_car_access.xlsx")
median_income <- read_excel("public_transportation/median_income.xlsx")
pop_white <- read_excel("public_transportation/population_white.xlsx")
pop_black <- read_excel("population_black/population_black.xlsx")
pop_hisp <- read_excel("population_black/population_hispanic.xlsx")
pop_asian <- read_excel("population_black/population_asian.xlsx")
# 5 Baltimore neighborhoods that use public transportation the most to get to work
max_public_transportation <- public_transportation %>%
as.data.frame() %>%
clean_names() %>%
arrange(desc(x2020_data)) %>%
slice_max(x2020_data, n=5)
# 5 Baltimore neighborhoods that use public transportation the least to get to work
min_public_transportation <- public_transportation %>%
as.data.frame() %>%
clean_names() %>%
slice_min(x2020_data, n=5)
# Output dataframes
max_public_transportation
min_public_transportation
# inner join neighborhoods that use public transportation the most with income data
max_transit_income <- max_public_transportation %>%
clean_names() %>%
inner_join(median_income, by="community")
# clean the names of all race dataframes so they join easily
pop_asian <- pop_asian %>%
clean_names()
pop_white <- pop_white %>%
clean_names()
pop_black <- pop_black %>%
clean_names()
pop_hisp <- pop_hisp %>%
clean_names()
# inner join race dataframes with the top public transport use and income dataframe
max_transit_race <- max_transit_income %>%
clean_names() %>%
inner_join(pop_asian, by="community") %>%
inner_join(pop_black, by="community") %>%
inner_join(pop_white, by="community") %>%
inner_join(pop_hisp, by="community")
View(no_car)
View(median_income)
low_public_and_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="Community") %>%
slice_max(no_car, n=5)
low_public_and_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="community") %>%
slice_max(no_car, n=5)
low_public_and_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="community") %>%
#slice_max(no_car, n=5)
low_public_and_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="community")
low_public_and_drive <- min_public_transportation %>%
clean_names()
low_public_and_drive <- min_public_transportation %>%
inner_join(no_car, by="community")
low_public_and_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="community") %>%
arrange(desc(x2020_data))
low_public_high_drive <- min_public_transportation %>%
clean_names() %>%
inner_join(no_car, by="community") %>%
arrange(desc(x2020_data))
View(low_public_and_drive)
View(drive_to_work)
high_public_low_drive <- max_public_transportation %>%
clean_names() %>%
inner_join(drive_to_work, by="community") %>%
arrange(desc(x2020_data))
